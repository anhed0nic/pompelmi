prima


pnpm -F @pompelmi/ui-react build
pnpm --filter ./website build


# per fare il deploy del sito pages github

pnpm --filter ./website build && {                                                                                                                    ─╯
  git fetch origin
  git worktree add -B gh-pages gh-pages origin/gh-pages
  rsync -av --delete --exclude ".git" website/dist/ gh-pages/
  (cd gh-pages && touch .nojekyll && git add -A && git commit -m "docs: publish website" && git push)
  git worktree remove gh-pages
} || echo "❌ Build failed, skipped deploy"





# push esplicito                                                                                                                                      ─╯
git push origin main

# e imposta l’upstream corretto per le prossime volte
git branch --set-upstream-to=origin/main main
# oppure in un colpo solo:
# git push --set-upstream origin main








 # 1) Point website to the local workspace package (no tarball)                                                                                      ─╯
npm --workspace ./website pkg set dependencies["@pompelmi/ui-react"]="workspace:*"

# 2) Do the same for the example that used the tarball
npm --workspace ./examples/next-demo pkg set dependencies["@pompelmi/ui-react"]="workspace:*"

# 3) Install (links workspaces) and build
pnpm install --no-frozen-lockfile --link-workspace-packages
pnpm -r --filter '!./examples/*' --filter '!@pompelmi/core' --if-present run build
pnpm --filter ./website build

git add . && git commit -m "*" git push -u origin main


pnpm -w add -D @astrojs/starlight @astrojs/mdx @astrojs/tailwind @astrojs/sitemap    


pnpm -F @pompelmi/ui-react build
pnpm --filter ./website build                                                               ─╯
pnpm -F website dev   # oppure build