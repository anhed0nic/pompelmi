name: Publish to npm (only if version changed)

on:
  push:
    branches: ['**']
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Ensure repository field in package.json matches repo
        run: |
          npm pkg set repository.type=git
          npm pkg set repository.url="https://github.com/${GITHUB_REPOSITORY}"

      - name: Read package name and version
        id: pkg
        run: |
          echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Read published version on npm
        id: npm
        run: |
          PUBLISHED=$(npm view "${{ steps.pkg.outputs.name }}" version || echo "none")
          echo "published_version=$PUBLISHED" >> $GITHUB_OUTPUT

      - name: Decide whether to publish
        id: decision
        run: |
          if [ "${{ steps.npm.outputs.published_version }}" = "none" ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
          elif [ "${{ steps.pkg.outputs.version }}" = "${{ steps.npm.outputs.published_version }}" ]; then
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Install deps
        if: steps.decision.outputs.should_publish == 'true'
        run: npm ci

      - name: Build
        if: steps.decision.outputs.should_publish == 'true'
        run: npm run build --if-present

      - name: Publish with provenance
        if: steps.decision.outputs.should_publish == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: 'true'
        run: npm publish --provenance --access public